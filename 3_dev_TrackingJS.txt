（現職にて）
マーケティングオートメーション機能の１つである Web トラッキング分野を担当していますが、
新 Web トラッキング JavaScript 並びにそのバックエンドを設計・開発しました。

チームメンバー
・PdM: 1 名
・開発エンジニア: 1 名
・QA エンジニア: 1 名

役割
・開発エンジニア (JS, Perl)

苦労した点
1. 非同期 JavaScript 読み込みへの対応
_cam.hogehoge('args')
のようなグローバルオブジェクトに関数が存在していることが前提の呼び出しでは、
非同期 JS 読み込みでエラーが発生してしまうことがあります。
それを避けるため、
スクリプトタグ読み込み時は単なるコマンドキューとしてグローバルオブジェクトを存在させ、
トラッキング JS が読み込まれたらコマンドキューからコマンドを処理して Web トラッキングが実行されるよう工夫しました。
この対応のおかげで、既存の SMP Web トラッキングでは実現困難だった Google Tag Manager のようなタグマネージメント連携にも対応できるようになりました。

2. カスタムフィールド設定の対応
既存の Web トラッキングでは、ユーザの細かな行動（企業名, etc...）を追跡するためのフィールドが存在しませんでした。
そのため、カスタムフィールドという機能を作成し、最大２０フィールドまでユーザが任意の項目を決めて解析に利用できるようにしました。
実装のため、サーバサイドでは Perl + Catalyst (5.65) で実装しました。
（既存のトラッキング Web サーバがそのようになっているため、工数の都合上新規構築は見送り、既存フレームワークの改良で進めました。）

3. JS Bundle 方式の工夫
既存の Web トラッキング JS は、モジュールを bundle して JS をビルドする方式ではありません。
ただコードを書けば良いのではなく、モジュール単位で管理すべきという考えから
gulp task で bundle を実施するよう工夫しました。
webpack のような重めのものを使うほどでもないと思われたので、そのようにしました。

